class Solution(object):
    def canCompleteCircuit(self, gas, cost):
        """
        :type gas: List[int]
        :type cost: List[int]
        :rtype: int
        """
        
        #check if can get to stations at all
        if sum(gas) < sum(cost):
            return -1


        #running total of gas
        current_gas = 0
        start_index = 0


        #current station value
        for i, gas_amount in enumerate(gas):

            cost_amount = cost[i]

            current_gas += gas_amount - cost_amount

        #return starting index total else -1

            if current_gas < 0:

                start_index = i + 1

                current_gas = 0

        return start_index
